<!DOCTYPE html>
<html>
    <body>

    <h1>Overwatch Story Game</h1>

    <button type="button" id="resetBtn" onclick="reset()">Reset</button>
    <br><br>
    
    <h1><p id="result"></p></h1>
    <h1><p id="action"></p></h1>

    <button type="button" id="flyBtn" onclick="mercy.fly()">Fly to Ally</button>
    <button type="button" id="healBtn" onclick="mercy.heal()">Heal Ally</button>
    <button type="button" id="dmgBtn" onclick="mercy.damage()">Boost an allies damage</button>
    <button type="button" id="resBtn" onclick="mercy.res()">Resurrect</button>
    
        <script>
        

        document.getElementById("result").innerHTML = "You are nearby your team. An enemy Genji walks in to attack you.";
        document.getElementById("action").innerHTML = "What do you do?";

        var time = 0;
        var death = 0;

        //JSON text
        var flyText = '{"script":[' +
            '{"fly":"You fly to an ally. Genji dies because he jumped into a 6v1 situation. The ally Reinhardt charged into the enemy team."},' + 
            '{"fly":"You fly to Reinhardt. The enemies see you out of position and kill you. Press reset to play again."},' + 
            '{"fly":"You fly to an ally, but all your allies end up dying and youre left alone against the enemy team."},' + 
            '{"fly":"You fly to an ally. The ally is still next to you so you dont really move at all. The enemy quickly overwhelms and kills you and your allies. Press reset to play again."},' +
            '{"death": "You are dead. Press reset to play again."}]}';

        var healText = '{"script":[' +
            '{"heal":"You heal an ally, but they dont notice the Genji. Genji kills you. Press reset to play again."},' + 
            '{"heal":"You heal Reinhardt and your allies move in with Reinhardt. A team fight occurs and all your allies are low on health."},' + 
            '{"heal":"You try to heal everyone the best you can. The enemy notices your presence and kills you. Press reset to play again."},' + 
            '{"heal":"You heal your only ally, but you both get overwhelmed and killed by the enemies. Press reset to play again."},' +
            '{"death": "You are dead. Press reset to play again."}]}';

        var boostText = '{"script":[' +
            '{"boost":"You boost an allies damage, but they dont notice the Genji. Genji kills you. Press reset to play again."},' + 
            '{"boost":"You boost an allies damage. An enemy ends up dying, but Reinhardt dies and the enemy Reinhardt kills you and your team. Press reset to play again."},' + 
            '{"boost":"You boost an allies damage. Some of the enemies die, but you are too noticeable and end up dying. Press reset to play again."},' + 
            '{"boost":"You boost your allies damage, but he misses every shot and you both end up dying. Press reset to play again."},' +
            '{"death": "You are dead. Press reset to play again."}]}';

        var resText = '{"script":[' +
            '{"res":"There is no one to Resurrect. While trying to figure out how to play the game, Genji kills you. Press reset to play again."},' + 
            '{"res":"There is no one to Resurrect. While trying to figure out how to play the game, the enemies kills you. Press reset to play again."},' + 
            '{"res":"There is no one to Resurrect. While trying to figure out how to play the game, the enemies kills you. Press reset to play again."},' + 
            '{"res":"You Resurrect all your dead teammates and win the fight!!! Press Reset to play again."},' + 
            '{"death": "You are dead. Press reset to play again."}]}';

        //JSON parsing into variable
        var flyObj = JSON.parse(flyText);
        var healObj = JSON.parse(healText);
        var boostObj = JSON.parse(boostText);
        var resObj = JSON.parse(resText);

        //Call certain array based on time and death counter
        var mercy = 
            {
                fly         : function()
                    {
                        if (death == 1)
                        {
                            document.getElementById("result").innerHTML = flyObj.script[4].death;
                        }   
                        else if (time == 0) 
                        {
                            document.getElementById("result").innerHTML = flyObj.script[0].fly;
                            time += 1;
                        } 
                        else if (time == 1)
                        {
                            document.getElementById("result").innerHTML = flyObj.script[1].fly;
                            time += 1;
                            death = 1;
                        }
                        else if (time == 2)
                        {
                            document.getElementById("result").innerHTML = flyObj.script[2].fly;
                            time += 1;
                        }
                        else if (time == 3)
                        {
                            document.getElementById("result").innerHTML = flyObj.script[3].fly;
                            time += 1;
                            death = 1;
                        }
                    },

                heal        : function()
                    {
                        var healText;
                        if (death == 1)
                        {
                            document.getElementById("result").innerHTML = healObj.script[4].death;
                        }
                        else if (time == 0) 
                        {
                            document.getElementById("result").innerHTML = healObj.script[0].heal;
                            time += 1;
                            death = 1;
                        } 
                        else if (time == 1)
                        {
                            document.getElementById("result").innerHTML = healObj.script[1].heal;
                            time += 1;
                        }
                        else if (time == 2)
                        {
                            document.getElementById("result").innerHTML = healObj.script[2].heal;
                            time += 1;
                            death = 1;
                        }
                        else if (time == 3)
                        {
                            document.getElementById("result").innerHTML = healObj.script[3].heal;
                            time += 1;
                            death = 1;
                        }
                    },

                damage      : function()
                    {
                        var damageText;

                        if (death == 1)
                        {
                            document.getElementById("result").innerHTML = boostObj.script[4].death;
                        }
                        else if (time == 0) 
                        {
                            document.getElementById("result").innerHTML = boostObj.script[0].boost;
                            time += 1;
                            death = 1;
                        } 
                        else if (time == 1)
                        {
                            document.getElementById("result").innerHTML = boostObj.script[1].boost;
                            time += 1;
                            death = 1;
                        }
                        else if (time == 2)
                        {
                            document.getElementById("result").innerHTML = boostObj.script[2].boost;
                            time += 1;
                            death = 1;
                        }
                        else if (time == 3)
                        {
                            document.getElementById("result").innerHTML = boostObj.script[3].boost;
                            time += 1;
                            death = 1;
                        }
                    },

                res         : function()
                    {
                        var resText;

                        if (death == 1)
                        {
                            document.getElementById("result").innerHTML = resObj.script[4].death;
                        }
                        else if (time == 0) 
                        {
                            document.getElementById("result").innerHTML = resObj.script[0].res;
                            time += 1;
                            death = 1;
                        } 
                        else if (time == 1)
                        {
                            document.getElementById("result").innerHTML = resObj.script[1].res;
                            time += 1;
                            death = 1;
                        }
                        else if (time == 2)
                        {
                            document.getElementById("result").innerHTML = resObj.script[2].res;
                            time += 1;
                            death = 1;
                        }
                        else if (time == 3)
                        {
                            document.getElementById("result").innerHTML = resObj.script[3].res;
                            time += 1;
                        }
                    }
            };

        //Reset the story
        function reset()
        {
            time = 0;
            death = 0;
            document.getElementById("result").innerHTML = "You are nearby your team. An enemy Genji walks in to attack you.";
        }
        </script>
    </body>
     <head>
        <script src="https://sdk.amazonaws.com/js/aws-sdk-2.2.18.min.js"></script>
        <title>Interactive Story</title>
        <meta charset="UTF-8">
            </head>
    <body id="bod">
        <p id="status"></p>
        <div id="output"></div>
        <script>
            var roleArn = 'arn:aws:iam::111950665511:role/cistest'; //from AWS IAM
            var appId = '256130938159288'; //from facebook
            // This is called with the results from from FB.getLoginStatus().
            function statusChangeCallback(response) {
                console.log('statusChangeCallback');
                console.log(response);
                // The response object is returned with a status field that lets the
                // app know the current login status of the person.
                // Full docs on the response object can be found in the documentation
                // for FB.getLoginStatus().
                if (response.status === 'connected') {
                    // Logged into your app and Facebook.
                    //testAPI();
                    AWS.config.credentials = new AWS.WebIdentityCredentials({ //WIF
                                                                            RoleArn: roleArn,
                                                                            ProviderId: 'graph.facebook.com',
                                                                            WebIdentityToken: response.authResponse.accessToken
                                                                            });
                                                                            testQuery();//will write to output div after page loads
                } else if (response.status === 'not_authorized') {
                    // The person is logged into Facebook, but not your app.
                    document.getElementById('status').innerHTML = 'Please log ' +
                    'into this app.';
                } else {
                    // The person is not logged into Facebook, so we're not sure if
                    // they are logged into this app or not.
                    document.getElementById('status').innerHTML = 'Please log ' +
                    'into Facebook.';
                }
            }
        
        // This function is called when someone finishes with the Login
        // Button.  See the onlogin handler attached to it in the sample
        // code below.
        function checkLoginState() {
            FB.getLoginStatus(function(response) {
                              statusChangeCallback(response);
                              });
        }
        
        window.fbAsyncInit = function() {
            FB.init({
                    appId      : appId,
                    cookie     : true,  // enable cookies to allow the server to access
                    // the session
                    xfbml      : true,  // parse social plugins on this page
                    version    : 'v2.8' // use graph api version 2.8
                    });
                    
                    // Now that we've initialized the JavaScript SDK, we call
                    // FB.getLoginStatus().  This function gets the state of the
                    // person visiting this page and can return one of three states to
                    // the callback you provide.  They can be:
                    //
                    // 1. Logged into your app ('connected')
                    // 2. Logged into Facebook, but not your app ('not_authorized')
                    // 3. Not logged into Facebook and can't tell if they are logged into
                    //    your app or not.
                    //
                    // These three cases are handled in the callback function.
                    
                    FB.getLoginStatus(function(response) {
                                      statusChangeCallback(response);
                                      });
                                      
        };
        
        // Load the SDK asynchronously
        (function(d, s, id) {
         var js, fjs = d.getElementsByTagName(s)[0];
         if (d.getElementById(id)) return;
         js = d.createElement(s); js.id = id;
         js.src = "//connect.facebook.net/en_US/sdk.js";
         fjs.parentNode.insertBefore(js, fjs);
         }(document, 'script', 'facebook-jssdk'));
         
         // Here we run a very simple test of the Graph API after login is
         // successful.  See statusChangeCallback() for when this call is made.
         function testAPI() {
             console.log('Welcome!  Fetching your information.... ');
             FB.api('/me', function(response) {
                    console.log('Successful login for: ' + response.name);
                    document.getElementById('status').innerHTML =
                    'Thanks for logging in, ' + response.name + '!';
                    });
         }
        
        function testQuery() {
            dynamodb = new AWS.DynamoDB({ region: 'us-west-2' });
            docClient = new AWS.DynamoDB.DocumentClient({ service: dynamodb });
            
            var params = {
                TableName:'supportInfo',
                KeyConditionExpression:'nameID = :vvv',
                ExpressionAttributeValues: {
                    ':vvv':'clickMercy'
                }
            }; //end params, now use them below
            
            docClient.query(params, function(err, resultData){
                            if(err){
                            document.getElementById("output").innerHTML =JSON.stringify(err, null, 2);
                            }else {
                            var increment = 0;
                            resultData.Items.forEach(function(item) {
                             increment++;
                             console.log("increment = " + increment);//check for increase
                             var x = item.heroInfo;

                             console.log("outputting: x = " + x);
                             var newDiv = document.createElement("div");//make a new div, dynamically
                             var idValueForNewDiv = "div" + increment;
                            console.log("id for div is now " + idValueForNewDiv);
                             newDiv.setAttribute("id", idValueForNewDiv); //set id for this new item, so we can talk to it later
                            
                            var newp = document.createElement("p");//put a p in the div
                             var newPMessage = x; //what's your message?
                             //console.log("message will be " + newPMessage);
                             var nodeWithMessage = document.createTextNode(newPMessage);//encode in a text node, for printing
                             
                             //newp.appendChild(nodeWithMessage);//put the new text element in the new paragraph
                             
                             var anchor = document.createElement("a");  // create a new anchor
                             var attributeForAnchor = document.createAttribute("href");        // Create a "href" attribute
                             attributeForAnchor.value = "https://s3.amazonaws.com/ahchoi/Microproject/Link.html"; // Set the value of the href attribute
                             anchor.setAttributeNode(attributeForAnchor);// Add the href attribute to <a>
                             anchor.appendChild(nodeWithMessage);
                             newp.appendChild(anchor);
                             
                             //var finalDiv = document.getElementById(idValueForNewDiv);//set up the newly created div
                             newDiv.appendChild(newp);//append the paragraph to the new div
                             
                            var element = document.getElementById("bod");//attach the div to the body
                             element.appendChild(newDiv);
                             });
                            }
                            })
        };
        </script>
        
        <!--
         Below we include the Login Button social plugin. This button uses
         the JavaScript SDK to present a graphical Login button that triggers
         the FB.login() function when clicked.
         -->
        
        <fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
            </fb:login-button>
            
            <div id="status">
            </div>
            
            </body>
</html> 
